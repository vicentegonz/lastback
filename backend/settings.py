"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
from datetime import timedelta
from pathlib import Path

import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY")

DJANGO_ENV = os.environ.get("DJANGO_ENV")
ALLOWED_HOSTS = "*"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = (os.environ.get("DEBUG") == "True") or (DJANGO_ENV != "production")


# REST Framework
# https://www.django-rest-framework.org/api-guide/settings/

REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.AllowAny",
    ],
    "DEFAULT_RENDERER_CLASSES": ("rest_framework.renderers.JSONRenderer",),
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
}


# Application definition

INSTALLED_APPS = [
    "django.contrib.contenttypes",
    "django.contrib.auth",
    "rest_framework",
    "backend.docs.apps.DocsConfig",
    "backend.example.apps.ExampleConfig",
    "backend.users.apps.UsersConfig",
    "djoser",
    "social_django", 
    "rest_framework_simplejwt",
    "rest_framework_simplejwt.token_blacklist"
]

MIDDLEWARE = [
    "social_django.middleware.SocialAuthExceptionMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "backend.urls"

WSGI_APPLICATION = "backend.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.environ.get("DEFAULT_DATABASE_NAME", "postgres"),
        "USER": os.environ.get("DEFAULT_DATABASE_USER", "postgres"),
        "PASSWORD": os.environ.get("DEFAULT_DATABASE_PASSWORD"),
        "HOST": os.environ.get("DEFAULT_DATABASE_HOST", "default_db"),
        "PORT": os.environ.get("DEFAULT_DATABASE_PORT", 5432),
    },
    "internal": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.environ.get("INTERNAL_DATABASE_NAME", "postgres"),
        "USER": os.environ.get("INTERNAL_DATABASE_USER", "postgres"),
        "PASSWORD": os.environ.get("INTERNAL_DATABASE_PASSWORD"),
        "HOST": os.environ.get("INTERNAL_DATABASE_HOST", "internal_db"),
        "PORT": os.environ.get("INTERNAL_DATABASE_PORT", 5432),
    },
}

# Configure DEFAULT_DATABASE_URL as main database and INTERNAL_DATABASE_URL
# as secondary database in production
if "DEFAULT_DATABASE_URL" in os.environ:
    DATABASES["default"] = dj_database_url.config(ssl_require=True)
if "INTERNAL_DATABASE_URL" in os.environ:
    DATABASES["internal"] = dj_database_url.config(ssl_require=True)


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Logging
# https://docs.djangoproject.com/en/3.2/topics/logging/

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": (
                "[%(asctime)s] [%(process)d] [%(levelname)s] "
                "[pathname=%(pathname)s lineno=%(lineno)s]"
                "[funcname=%(funcName)s] %(message)s"
            ),
            "datefmt": "%Y-%m-%d %H:%M:%S",
        },
        "simple": {"format": "%(levelname)s %(message)s"},
    },
    "handlers": {
        "null": {"level": "DEBUG", "class": "logging.NullHandler"},
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "verbose",
        },
    },
    "root": {"handlers": ["console"], "level": "INFO"},
}

PROPAGATE_EXCEPTIONS = True

# Templates
# https://docs.djangoproject.com/en/3.2/topics/templates/#configuration

# REVISAR DIRS
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "social_django.context_processors.backends",
                "social_django.context_processors.login_redirect"
            ]
        },
    }
]

AUTH_USER_MODEL = "users.UserAccount"

SIMPLE_JWT = {
    'AUTH_HEADER_TYPES': ("JWT",),
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'AUTH_TOKEN_CLASSES': (
        'rest_framework_simplejwt.tokens.AccessToken',
    )
}

AUTHENTICATION_BACKENDS = (
    'social_core.backends.google.GoogleOAuth2',
    'django.contrib.auth.backends.ModelBackend'

)
DJOSER = {
    "LOGIN_FIELD": "email",
    'SOCIAL_AUTH_TOKEN_STRATEGY': 'djoser.social.token.jwt.TokenStrategy',
    'SOCIAL_AUTH_ALLOWED_REDIRECT_URIS': ['http://localhost:8000'],
    "SERIALIZERS": {
        "user_create": "backend.users.serializers.UserAccountCreateSerializer",
        "user": "backend.users.serializers.UserAccountCreateSerializer",
        'current_user': 'backend.users.serializers.UserAccountCreateSerializer',
        "user_delete": "djoser.serializers.UserDeleteSerializer",
    },
}

# Google API Credentials
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '282812661596-l3jflmj7t08h65rgu575pgbvfkc1gm1o.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = 'X9K97gpB-12xjKTqbfFJviM2'

SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = ['https://www.googleapis.com/auth/userinfo.email', 'https://www.googleapis.com/auth/userinfo.profile', 'openid' ]

SOCIAL_AUTH_GOOGLE_OAUTH2_EXTRA_DATA = ['first_name', 'last_name']